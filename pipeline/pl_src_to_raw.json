{
	"name": "pl_src_to_raw",
	"properties": {
		"activities": [
			{
				"name": "act_lookup_summary_file",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_adls_summary_file",
						"type": "DatasetReference",
						"parameters": {
							"adls_container_name": {
								"value": "@pipeline().parameters.adls_container_name",
								"type": "Expression"
							},
							"adls_folder_name": {
								"value": "@pipeline().parameters.adls_folder_name",
								"type": "Expression"
							},
							"adls_filename": {
								"value": "@pipeline().parameters.adls_filename",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "act_foreach_s3_to_raw",
				"description": "This activity will iterate and copy each file from s3 and load into adls",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "act_lookup_summary_file",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('act_lookup_summary_file').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "act_copy_files_s3_to_raw",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AmazonS3ReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_s3_files",
									"type": "DatasetReference",
									"parameters": {
										"s3_bucket_name": {
											"value": "@pipeline().parameters.s3_bucket_name",
											"type": "Expression"
										},
										"s3_filename": {
											"value": "@item().FileName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_s3_adls_sink",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_container_name",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@concat('Raw/', formatDateTime(convertTimeZone(pipeline().TriggerTime, 'UTC', 'Eastern Standard Time'),'yyyy/'), formatDateTime(convertTimeZone(pipeline().TriggerTime, 'UTC', 'Eastern Standard Time'),'MM/'),formatDateTime(convertTimeZone(pipeline().TriggerTime, 'UTC', 'Eastern Standard Time'),'dd/'))",
											"type": "Expression"
										},
										"filename": {
											"value": "@concat(item().FileName, '_',formatDateTime(convertTimeZone(pipeline().TriggerTime, 'UTC', 'Eastern Standard Time'), 'yyyyMMdd'))",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "act_copy_raw_audits",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "act_copy_files_s3_to_raw",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderQuery": {
										"value": "SELECT \n'@{pipeline().DataFactory}' as DataFactoryName,\n'@{pipeline().Pipeline}' as PipelineName,\n'@{activity('act_copy_files_s3_to_raw').output.dataRead}' as SourceCount,\n'@{activity('act_copy_files_s3_to_raw').output.dataWritten}' as RawCount,\n'@{pipeline().RunId}' as RunID,\n'@{pipeline().TriggerTime}' as ExecutionDate,\n'@{activity('act_copy_files_s3_to_raw').output.executionDetails[0].status}' as ExecutionStatus\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_raw_audits",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_raw_audits_sink",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_container_name",
											"type": "Expression"
										},
										"folder_name": "Audits/temp/",
										"filename": {
											"value": "@item().FileName",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "act_merge_raw_audits",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "act_foreach_s3_to_raw",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": "Audits/temp",
							"wildcardFileName": "*",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "MergeFiles"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_raw_audits_merge_source",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@pipeline().parameters.adls_container_name",
								"type": "Expression"
							},
							"folder_name": "Audits/temp/"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_raw_audits_merge_sink",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@pipeline().parameters.adls_container_name",
								"type": "Expression"
							},
							"folder_name": {
								"value": "@concat('Audits/',formatDateTime(convertTimeZone(pipeline().TriggerTime, 'UTC', 'Eastern Standard Time'), 'yyyyMMdd/'))",
								"type": "Expression"
							},
							"filename": "source_to_raw_audits.csv"
						}
					}
				]
			},
			{
				"name": "act_delete_temp_audits",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "act_merge_raw_audits",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_temp_audits",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@pipeline().parameters.adls_container_name",
								"type": "Expression"
							},
							"folder_name": "Audits/temp"
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "act_execute_pl_raw_to_refined",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "act_delete_temp_audits",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_raw_to_refined",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"adls_container_name": {
							"value": "@pipeline().parameters.adls_container_name",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"adls_container_name": {
				"type": "string",
				"defaultValue": "dataengineering"
			},
			"adls_folder_name": {
				"type": "string",
				"defaultValue": "SummaryFiles"
			},
			"adls_filename": {
				"type": "string",
				"defaultValue": "summaryfile.txt"
			},
			"s3_bucket_name": {
				"type": "string"
			},
			"s3_filename": {
				"type": "string"
			}
		},
		"annotations": []
	}
}