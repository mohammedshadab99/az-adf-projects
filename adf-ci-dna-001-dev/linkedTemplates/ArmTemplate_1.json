{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-ci-dna-001-dev"
		},
		"ls_synapse_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_synapse'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=syncidna001dev-ondemand.sql.azuresynapse.net;Initial Catalog=@{linkedService().db_name}"
		},
		"ls_gen2_adls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().adls_url}"
		},
		"ls_synapse_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "cb63ec49-d796-479b-9599-006dad11cd53"
		},
		"ls_synapse_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "75c0b612-3aa7-4c9b-8ff1-87eb24af525c"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ds_refined_audits_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"folder_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "S3_to_Synapse_Migration"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_s3_adls_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"folder_name": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "S3_to_Synapse_Migration"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_s3_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_aws_s3",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"s3_bucket_name": {
						"type": "string"
					},
					"s3_filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "S3_to_Synapse_Migration"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": {
							"value": "@dataset().s3_bucket_name",
							"type": "Expression"
						},
						"fileName": {
							"value": "@dataset().s3_filename",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_s3_summary_file_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"adls_container_name": {
						"type": "string"
					},
					"adls_folder_name": {
						"type": "string"
					},
					"adls_filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "S3_to_Synapse_Migration"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().adls_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().adls_folder_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().adls_container_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_s3_summary_file_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_aws_s3",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"bucket_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "S3_to_Synapse_Migration"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": {
							"value": "@dataset().bucket_name",
							"type": "Expression"
						},
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_temp_audits')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"folder_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "S3_to_Synapse_Migration"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folder_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_gen2_adls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"adls_url": {
						"type": "string",
						"defaultValue": "https://stocidna001dev.dfs.core.windows.net/"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_gen2_adls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_akv",
							"type": "LinkedServiceReference"
						},
						"secretName": "adls-account-key"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_synapse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"db_name": {
						"type": "string",
						"defaultValue": "refined"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ls_synapse_connectionString')]",
					"servicePrincipalId": "[parameters('ls_synapse_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_akv",
							"type": "LinkedServiceReference"
						},
						"secretName": "dev-devops-lz-client-secret"
					},
					"tenant": "[parameters('ls_synapse_properties_typeProperties_tenant')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_pnc_synapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_create_data_source_raw",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_synapse",
							"type": "LinkedServiceReference",
							"parameters": {
								"db_name": {
									"value": "@pipeline().parameters.synapse_raw_db_name",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "DECLARE @ds_command NVARCHAR(MAX)\r\nSET @ds_command = N'IF NOT EXISTS(SELECT * FROM sys.external_data_sources WHERE name = ''pnc_raw'')\r\nBEGIN\r\n    CREATE EXTERNAL DATA SOURCE [pnc_raw]\r\n    WITH(\r\n        LOCATION = ''abfss://dna@stocidna001dev.dfs.core.windows.net/Raw/PnC/''\r\n    )\r\nEND'\r\nEXEC sp_executesql @ds_command"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "act_create_schema_raw",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_synapse",
							"type": "LinkedServiceReference",
							"parameters": {
								"db_name": {
									"value": "@pipeline().parameters.synapse_raw_db_name",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "DECLARE @schema_command NVARCHAR(MAX)\r\nSET @schema_command = N'\r\nIF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = ''PnC'')\r\nBEGIN\r\n    EXEC(''CREATE SCHEMA PnC'')\r\nEND'\r\nEXEC sp_executesql @schema_command"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "act_create_schema_refined",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_synapse",
							"type": "LinkedServiceReference",
							"parameters": {
								"db_name": {
									"value": "@pipeline().parameters.synapse_refined_db_name",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "DECLARE @schema_command NVARCHAR(MAX)\r\nSET @schema_command = N'\r\nIF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = ''PnC'')\r\nBEGIN\r\n    EXEC(''CREATE SCHEMA PnC'')\r\nEND'\r\nEXEC sp_executesql @schema_command"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "act_create_data_source_refined",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_synapse",
							"type": "LinkedServiceReference",
							"parameters": {
								"db_name": {
									"value": "@pipeline().parameters.synapse_refined_db_name",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "DECLARE @ds_command NVARCHAR(MAX)\r\nSET @ds_command = N'IF NOT EXISTS(SELECT * FROM sys.external_data_sources WHERE name = ''pnc_refined'')\r\nBEGIN\r\n    CREATE EXTERNAL DATA SOURCE [pnc_refined]\r\n    WITH(\r\n        LOCATION = ''abfss://dna@stocidna001dev.dfs.core.windows.net/Refined/PnC/''\r\n    )\r\nEND'\r\nEXEC sp_executesql @ds_command"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "act_create_raw_external_tables",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "act_create_data_source_raw",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "act_create_schema_raw",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "act_create_schema_refined",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "act_create_data_source_refined",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_synapse",
							"type": "LinkedServiceReference",
							"parameters": {
								"db_name": {
									"value": "@pipeline().parameters.synapse_raw_db_name",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"parameters": [
										{
											"name": "TriggerTime",
											"type": "String",
											"value": {
												"value": "@convertTimeZone(pipeline().TriggerTime, 'UTC', 'Eastern Standard Time')",
												"type": "Expression"
											},
											"direction": "Input"
										}
									],
									"type": "Query",
									"text": "DECLARE @FilePath NVARCHAR(MAX) = concat(format(convert(datetime2,@TriggerTime,121), 'yyyy/'), format(convert(datetime2,@TriggerTime,121), 'MM/'), format(convert(datetime2,@TriggerTime,121), 'dd/'))\r\n\r\nDECLARE @drop_agent_table_command NVARCHAR(MAX)\r\nSET @drop_agent_table_command = N'\r\nIF EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''Agents'' AND TABLE_TYPE=''BASE TABLE'')\r\nBEGIN\r\n    DROP EXTERNAL TABLE PnC.Agents\r\nEND'\r\nEXEC sp_executesql @drop_agent_table_command\r\n\r\nDECLARE @Agents_command NVARCHAR(MAX)\r\nSET @Agents_command = N'\r\nCREATE EXTERNAL TABLE PnC.Agents\r\n(\r\n    AgentID\tINT,\r\n    FirstName NVARCHAR(4000),\r\n    LastName NVARCHAR(4000),\r\n    Email NVARCHAR(4000),\r\n    PhoneNumber NVARCHAR(4000)\r\n)\r\nWITH\r\n(\r\n    LOCATION = '''+ @FilePath + 'Agents*.csv'',\r\n    DATA_SOURCE = [pnc_raw],\r\n    FILE_FORMAT = [PNC_CSV]\r\n)'\r\nEXEC sp_executesql @Agents_command\r\n\r\nDECLARE @drop_claims_table_command NVARCHAR(MAX)\r\nSET @drop_claims_table_command = N'\r\nIF EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''Claims'' AND TABLE_TYPE=''BASE TABLE'')\r\nBEGIN\r\n    DROP EXTERNAL TABLE PnC.Claims\r\nEND'\r\nEXEC sp_executesql @drop_claims_table_command\r\n\r\nDECLARE @Claims_command NVARCHAR(MAX)\r\nSET @Claims_command = N'\r\nCREATE EXTERNAL TABLE PnC.Claims\r\n(\r\n    ClaimID\tINT,\r\n    PolicyID INT,\r\n    ClaimDate DATE,\r\n    Description\tNVARCHAR(4000),\r\n    Amount DECIMAL\r\n)\r\nWITH\r\n(\r\n    LOCATION = '''+ @FilePath + 'Claims*.csv'',\r\n    DATA_SOURCE = [pnc_raw],\r\n    FILE_FORMAT = [PNC_CSV]\r\n)'\r\nEXEC sp_executesql @Claims_command\r\n\r\nDECLARE @drop_customer_table_command NVARCHAR(MAX)\r\nSET @drop_customer_table_command = N'\r\nIF EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''Customers'' AND TABLE_TYPE=''BASE TABLE'')\r\nBEGIN\r\n    DROP EXTERNAL TABLE PnC.Customers\r\nEND'\r\nEXEC sp_executesql @drop_customer_table_command\r\n\r\nDECLARE @customers_command NVARCHAR(MAX)\r\nSET @customers_command = N'\r\nCREATE EXTERNAL TABLE PnC.Customers\r\n(\r\n    CustomerID INT,\r\n    FirstName NVARCHAR(4000),\r\n    LastName NVARCHAR(4000),\r\n    DateOfBirth\tDATE,\r\n    Email NVARCHAR(4000),\r\n    PhoneNumber\tNVARCHAR(4000)\r\n)\r\nWITH\r\n(\r\n    LOCATION = '''+ @FilePath + 'Customers*.csv'',\r\n    DATA_SOURCE = [pnc_raw],\r\n    FILE_FORMAT = [PNC_CSV]\r\n)'\r\nEXEC sp_executesql @customers_command\r\n\r\nDECLARE @drop_InsuranceCompanies_tables_command NVARCHAR(MAX)\r\nSET @drop_InsuranceCompanies_tables_command = N'\r\nIF EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''InsuranceCompanies'' AND TABLE_TYPE=''BASE TABLE'')\r\nBEGIN\r\n    DROP EXTERNAL TABLE PnC.InsuranceCompanies\r\nEND'\r\nEXEC sp_executesql @drop_InsuranceCompanies_tables_command\r\n\r\nDECLARE @InsuranceCompanies_command NVARCHAR(MAX)\r\nSET @InsuranceCompanies_command = N'\r\nCREATE EXTERNAL TABLE PnC.InsuranceCompanies\r\n(\r\n    CompanyID INT,\r\n    CompanyName\tNVARCHAR(4000),\r\n    Headquarters NVARCHAR(4000),\r\n    Website\tNVARCHAR(4000)\r\n)\r\nWITH\r\n(\r\n    LOCATION = '''+ @FilePath + 'InsuranceCompanies*.csv'',\r\n    DATA_SOURCE = [pnc_raw],\r\n    FILE_FORMAT = [PNC_CSV]\r\n)'\r\nEXEC sp_executesql @InsuranceCompanies_command\r\n\r\nDECLARE @drop_Policies_table_command NVARCHAR(MAX)\r\nSET @drop_Policies_table_command = N'\r\nIF EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''Policies'' AND TABLE_TYPE=''BASE TABLE'')\r\nBEGIN\r\n    DROP EXTERNAL TABLE PnC.Policies\r\nEND'\r\nEXEC sp_executesql @drop_Policies_table_command\r\n\r\nDECLARE @Policies_command NVARCHAR(MAX)\r\nSET @Policies_command = N'\r\nCREATE EXTERNAL TABLE PnC.Policies\r\n(\r\n    PolicyID INT,\r\n    CustomerID INT,\r\n    PolicyNumber NVARCHAR(4000),\r\n    PolicyType NVARCHAR(4000),\r\n    PolicyStartDate\tDATE,\r\n    PolicyEndDate DATE,\r\n    Premium\tDECIMAL\r\n)\r\nWITH\r\n(\r\n    LOCATION = '''+ @FilePath + 'Policies*.csv'',\r\n    DATA_SOURCE = [pnc_raw],\r\n    FILE_FORMAT = [PNC_CSV]\r\n)'\r\nEXEC sp_executesql @Policies_command"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "act_create_refined_external_tables",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "act_create_raw_external_tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_synapse",
							"type": "LinkedServiceReference",
							"parameters": {
								"db_name": {
									"value": "@pipeline().parameters.synapse_refined_db_name",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"parameters": [
										{
											"name": "TriggerTime",
											"type": "String",
											"value": {
												"value": "@convertTimeZone(pipeline().TriggerTime, 'UTC', 'Eastern Standard Time')",
												"type": "Expression"
											},
											"direction": "Input"
										}
									],
									"type": "Query",
									"text": "DECLARE @FilePath NVARCHAR(MAX) = concat(format(convert(datetime2,@TriggerTime,121), 'yyyy/'), format(convert(datetime2,@TriggerTime,121), 'MM/'), format(convert(datetime2,@TriggerTime,121), 'dd/'))\r\n\r\nDECLARE @timestamp VARCHAR(50)\r\nSET @timestamp = CONVERT(DATETIME2, @TriggerTime)\r\n\r\nDECLARE @drop_agent_table_command NVARCHAR(MAX)\r\nSET @drop_agent_table_command = N'\r\nIF EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''Agents'' AND TABLE_TYPE=''BASE TABLE'')\r\nBEGIN\r\n    DROP EXTERNAL TABLE PnC.Agents\r\nEND'\r\nEXEC sp_executesql @drop_agent_table_command\r\n\r\nDECLARE @Agents_command NVARCHAR(MAX)\r\nSET @Agents_command = N'\r\nCREATE EXTERNAL TABLE PnC.Agents\r\nWITH\r\n(\r\n    LOCATION = ''/ExternalTables/Agents/' + @timestamp + ''',\r\n    DATA_SOURCE = [refined_pnc],\r\n    FILE_FORMAT = [PNC_PARQUET]\r\n) AS \r\nSELECT \r\n    CAST(a.AgentID AS INT) AgentID,\r\n    CAST(a.FirstName AS NVARCHAR(4000)) FirstName,\r\n    CAST(a.LastName AS NVARCHAR(4000)) LastName,\r\n    CAST(a.Email AS NVARCHAR(4000)) Email,\r\n    CAST(a.PhoneNumber AS NVARCHAR(4000)) PhoneNumber\r\n    FROM OPENROWSET(\r\n        BULK '''+ @FilePath + 'Agents*.parquet'',\r\n        FORMAT = ''parquet'',\r\n        DATA_SOURCE = ''refined_pnc''\r\n    ) AS [a]'\r\nEXEC sp_executesql @Agents_command\r\n\r\n\r\nDECLARE @drop_claims_table_command NVARCHAR(MAX)\r\nSET @drop_claims_table_command = N'\r\nIF EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''Claims'' AND TABLE_TYPE=''BASE TABLE'')\r\nBEGIN\r\n    DROP EXTERNAL TABLE PnC.Claims\r\nEND'\r\nEXEC sp_executesql @drop_claims_table_command\r\n\r\nDECLARE @Claims_command NVARCHAR(MAX)\r\nSET @Claims_command = N'\r\nCREATE EXTERNAL TABLE PnC.Claims\r\nWITH\r\n(\r\n    LOCATION = ''/ExternalTables/Claims/' + @timestamp + ''',\r\n    DATA_SOURCE = [refined_pnc],\r\n    FILE_FORMAT = [PNC_PARQUET]\r\n) AS\r\nSELECT \r\n    CAST(a.ClaimID AS\tINT) ClaimID,\r\n    CAST(a.PolicyID AS INT) PolicyID,\r\n    CAST(a.ClaimDate AS DATE) ClaimDate,\r\n    CAST(a.Description AS NVARCHAR(4000)) Description,\r\n    CAST(a.Amount AS DECIMAL) Amount\r\n    FROM OPENROWSET(\r\n    BULK '''+ @FilePath + 'Claims*.parquet'',\r\n    FORMAT = ''parquet'',\r\n    DATA_SOURCE = ''refined_pnc''\r\n) AS [a]'\r\nEXEC sp_executesql @Claims_command\r\n\r\n\r\nDECLARE @drop_customer_table_command NVARCHAR(MAX)\r\nSET @drop_customer_table_command = N'\r\nIF EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''Customers'' AND TABLE_TYPE=''BASE TABLE'')\r\nBEGIN\r\n    DROP EXTERNAL TABLE PnC.Customers\r\nEND'\r\nEXEC sp_executesql @drop_customer_table_command\r\n\r\nDECLARE @customers_command NVARCHAR(MAX)\r\nSET @customers_command = N'\r\nCREATE EXTERNAL TABLE PnC.Customers\r\nWITH\r\n(\r\n    LOCATION = ''/ExternalTables/Customers/' + @timestamp + ''',\r\n    DATA_SOURCE = [refined_pnc],\r\n    FILE_FORMAT = [PNC_PARQUET]\r\n) AS \r\nSELECT\r\n    CAST(a.CustomerID AS INT) CustomerID,\r\n    CAST(a.FirstName AS NVARCHAR(4000)) FirstName,\r\n    CAST(a.LastName AS NVARCHAR(4000)) LastName,\r\n    CAST(a.DateOfBirth AS DATETIME2) DateOfBirth,\r\n    CAST(a.Email AS NVARCHAR(4000)) Email,\r\n    CAST(a.PhoneNumber AS NVARCHAR(4000)) PhoneNumber\r\n    FROM OPENROWSET(\r\n    BULK '''+ @FilePath + 'Customers*.parquet'',\r\n    FORMAT = ''parquet'',\r\n    DATA_SOURCE = ''refined_pnc''\r\n    ) AS [a]'\r\nEXEC sp_executesql @customers_command\r\n\r\n\r\nDECLARE @drop_InsuranceCompanies_tables_command NVARCHAR(MAX)\r\nSET @drop_InsuranceCompanies_tables_command = N'\r\nIF EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''InsuranceCompanies'' AND TABLE_TYPE=''BASE TABLE'')\r\nBEGIN\r\n    DROP EXTERNAL TABLE PnC.InsuranceCompanies\r\nEND'\r\nEXEC sp_executesql @drop_InsuranceCompanies_tables_command\r\n\r\nDECLARE @InsuranceCompanies_command NVARCHAR(MAX)\r\nSET @InsuranceCompanies_command = N'\r\nCREATE EXTERNAL TABLE PnC.InsuranceCompanies\r\nWITH\r\n(\r\n    LOCATION = ''/ExternalTables/InsuranceCompanies/' + @timestamp + ''',\r\n    DATA_SOURCE = [refined_pnc],\r\n    FILE_FORMAT = [PNC_PARQUET]\r\n) AS \r\nSELECT\r\n    CAST(a.CompanyID AS INT) CompanyID,\r\n    CAST(a.CompanyName AS NVARCHAR(4000)) CompanyName,\r\n    CAST(a.Headquarters AS NVARCHAR(4000)) Headquarters,\r\n    CAST(a.Website AS NVARCHAR(4000)) Website\r\n    FROM OPENROWSET(\r\n    BULK '''+ @FilePath + 'InsuranceCompanies*.parquet'',\r\n    FORMAT = ''parquet'',\r\n    DATA_SOURCE = ''refined_pnc''\r\n    ) AS [a]'\r\nEXEC sp_executesql @InsuranceCompanies_command\r\n\r\n\r\nDECLARE @drop_Policies_table_command NVARCHAR(MAX)\r\nSET @drop_Policies_table_command = N'\r\nIF EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = ''Policies'' AND TABLE_TYPE=''BASE TABLE'')\r\nBEGIN\r\n    DROP EXTERNAL TABLE PnC.Policies\r\nEND'\r\nEXEC sp_executesql @drop_Policies_table_command\r\n\r\nDECLARE @Policies_command NVARCHAR(MAX)\r\nSET @Policies_command = N'\r\nCREATE EXTERNAL TABLE PnC.Policies\r\nWITH\r\n(\r\n    LOCATION = ''/ExternalTables/Policies/' + @timestamp + ''',\r\n    DATA_SOURCE = [refined_pnc],\r\n    FILE_FORMAT = [PNC_PARQUET]\r\n) AS \r\nSELECT\r\n    CAST(a.PolicyID AS INT) PolicyID,\r\n    CAST(a.CustomerID AS INT) CustomerID,\r\n    CAST(a.PolicyNumber AS NVARCHAR(4000)) PolicyNumber,\r\n    CAST(a.PolicyType AS NVARCHAR(4000)) PolicyType,\r\n    CAST(a.PolicyStartDate AS DATE) PolicyStartDate,\r\n    CAST(a.PolicyEndDate AS DATE) PolicyEndDate,\r\n    CAST(a.Premium AS DECIMAL) Premium\r\n    FROM OPENROWSET(\r\n    BULK '''+ @FilePath + 'Policies*.parquet'',\r\n    FORMAT = ''parquet'',\r\n    DATA_SOURCE = ''refined_pnc''\r\n    ) AS [a]'\r\nEXEC sp_executesql @Policies_command"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "act_script_audit_view",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "act_create_refined_external_tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_synapse",
							"type": "LinkedServiceReference",
							"parameters": {
								"db_name": {
									"value": "@pipeline().parameters.synapse_refined_db_name",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "DECLARE @AuditView_Command NVARCHAR(MAX)\r\nSET @AuditView_Command = N'\r\nCREATE OR ALTER VIEW Audits.PnC_Audits AS\r\nSELECT a.*, \r\na.filepath() as [FilePath], \r\na.filepath(1) as [Year],\r\na.filepath(2) as [Month],\r\na.filepath(3) as [Day]\r\nFROM OPENROWSET\r\n(\r\n    BULK ''/PnC/*/*/*/Raw_Audits.csv'',\r\n    DATA_SOURCE = ''audits_ds'',\r\n    FORMAT = ''CSV'',\r\n    FIELDTERMINATOR = '','', \r\n    FIRST_ROW = 2,\r\n    ROWTERMINATOR = ''\\n''\r\n)\r\nWITH\r\n(\r\n[DataFactoryName] NVARCHAR(4000),\r\n[PipelineName] NVARCHAR(4000),\r\n[PipelineRunId] NVARCHAR(4000),\r\n[SourceRowCount] NVARCHAR(4000),\r\n[RawRowCount] NVARCHAR(4000),\r\n[AuditStatus] NVARCHAR(4000)\r\n) as [a]'\r\n\r\nEXEC sp_executesql @AuditView_Command"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "act_if_recon_matched",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "act_recon_checks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('act_recon_checks').output.resultSets[0].rows[0].Counts, 0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "act_recon_failed",
									"description": "Recon check failed",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Recon Failed",
										"errorCode": "Recon Failed"
									}
								}
							]
						}
					},
					{
						"name": "act_recon_checks",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "act_script_audit_view",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_synapse",
							"type": "LinkedServiceReference",
							"parameters": {
								"db_name": {
									"value": "@pipeline().parameters.synapse_refined_db_name",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"parameters": [
										{
											"name": "TriggerTime",
											"type": "String",
											"value": {
												"value": "@formatDateTime(convertTimeZone(pipeline().TriggerTime, 'UTC','Eastern Standard Time'))",
												"type": "Expression"
											},
											"direction": "Input"
										}
									],
									"type": "Query",
									"text": "DECLARE @YEAR NVARCHAR(4000) = FORMAT(CONVERT(DATETIME2, @TriggerTime, 121), 'yyyy')\r\nDECLARE @MONTH NVARCHAR(4000) = FORMAT(CONVERT(DATETIME2, @TriggerTime, 121), 'MM')\r\nDECLARE @DAY NVARCHAR(4000) = FORMAT(CONVERT(DATETIME2, @TriggerTime, 121), 'dd')\r\n\r\nDECLARE @check_command NVARCHAR(4000)\r\nSET @check_command = N'\r\nSELECT COUNT(*) AS [Counts] FROM Audits.PnC_Audits\r\nWHERE (SourceRowCount <> RawRowCount)\r\nAND [Year] = '+ @YEAR +'\r\nAND [Month] = '+ @MONTH +'\r\nAND [Day] = '+ @DAY +''\r\n\r\nEXEC sp_executesql @check_command"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"synapse_raw_db_name": {
						"type": "string"
					},
					"synapse_refined_db_name": {
						"type": "string"
					},
					"raw_schema": {
						"type": "string"
					},
					"refined_schema": {
						"type": "string"
					}
				},
				"variables": {
					"counts": {
						"type": "String"
					},
					"holding_value": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "PnC"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-23T23:03:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_synapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_synapse_views')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_synapse_prerequisites",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_synapse",
							"type": "LinkedServiceReference",
							"parameters": {
								"db_name": "refined"
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"parameters": [
										{
											"name": "schema",
											"type": "String",
											"value": {
												"value": "IF NOT EXISTS (\n    SELECT * FROM INFORMATION_SCHEMA.SCHEMATA\n    WHERE SCHEMA_NAME = '@{variables('schema_name')}'\n)\nBEGIN\n    EXEC ('CREATE SCHEMA @{variables('schema_name')}')\nEND",
												"type": "Expression"
											},
											"direction": "Input"
										},
										{
											"name": "external_file_format",
											"type": "String",
											"value": {
												"value": "IF NOT EXISTS(\n    SELECT * FROM sys.external_file_formats\n    WHERE name = 'dna_adventureworks_parquet'\n)\nBEGIN\n    CREATE EXTERNAL FILE FORMAT dna_adventureworks_parquet\n    WITH\n    (\n        FORMAT_TYPE = PARQUET,\n        DATA_COMPRESSION='org.apache.hadoop.io.compress.SnappyCodec'\n    )\nEND",
												"type": "Expression"
											},
											"direction": "Input"
										}
									],
									"type": "NonQuery",
									"text": "EXEC sp_executesql @schema\r\nEXEC sp_executesql @external_file_format"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "act_script_raw_views",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "act_synapse_prerequisites",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_synapse",
							"type": "LinkedServiceReference",
							"parameters": {
								"db_name": "raw"
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "DECLARE  @Address_Command NVARCHAR(MAX)\r\nSET @Address_Command = N'CREATE OR ALTER VIEW [AdventureWorks].[Address] AS\r\nSELECT * \r\nFROM OPENROWSET(\r\n        BULK ''Address.csv'',\r\n        DATA_SOURCE = ''adventureworks_raw'',\r\n        FORMAT = ''CSV'', \r\n        FIELDTERMINATOR ='','', \r\n        FIRST_ROW = 2,\r\n        ROWTERMINATOR = ''\\n''\r\n    )\r\nWITH(\r\n    AddressID INT,\r\n    AddressLine1 NVARCHAR(4000),\r\n    AddressLine2 NVARCHAR(4000),\r\n    City NVARCHAR(4000),\r\n    StateProvince NVARCHAR(4000),\r\n    CountryRegion NVARCHAR(4000),\r\n    PostalCode NVARCHAR(4000),\r\n    rowguid UNIQUEIDENTIFIER,\r\n    ModifiedDate DATETIME2\r\n) AS A'\r\nEXEC sp_executesql @Address_Command\r\n\r\nDECLARE @Customer_Command NVARCHAR(MAX)\r\nSET @Customer_Command = N'CREATE OR ALTER VIEW [AdventureWorks].[Customer] AS\r\nSELECT * \r\nFROM OPENROWSET(\r\n        BULK ''Customer.csv'',\r\n        DATA_SOURCE = ''adventureworks_raw'',\r\n        FORMAT = ''CSV'', \r\n        FIELDTERMINATOR ='','', \r\n        FIRST_ROW = 2,\r\n        ROWTERMINATOR = ''\\n''\r\n    )\r\nWITH(\r\n    CustomerID INT,\r\n    NameStyle BIT,\r\n    Title NVARCHAR(4000),\r\n    FirstName NVARCHAR(4000),\r\n    MiddleName NVARCHAR(4000),\r\n    LastName NVARCHAR(4000),\r\n    Suffix NVARCHAR(4000),\r\n    CompanyName NVARCHAR(4000),\r\n    SalesPerson NVARCHAR(4000),\r\n    EmailAddress NVARCHAR(4000),\r\n    Phone NVARCHAR(4000),\r\n    PasswordHash VARCHAR(4000),\r\n    PasswordSalt VARCHAR(4000),\r\n    rowguid UNIQUEIDENTIFIER,\r\n    ModifiedDate DATETIME2\r\n) AS A'\r\nEXEC sp_executesql @Customer_Command\r\n\r\nDECLARE @CustomerAddress_Command NVARCHAR(MAX)\r\nSET @CustomerAddress_Command = N'CREATE OR ALTER VIEW [AdventureWorks].[CustomerAddress] AS\r\nSELECT * \r\nFROM OPENROWSET(\r\n        BULK ''CustomerAddress.csv'',\r\n        DATA_SOURCE = ''adventureworks_raw'',\r\n        FORMAT = ''CSV'', \r\n        FIELDTERMINATOR ='','', \r\n        FIRST_ROW = 2,\r\n        ROWTERMINATOR = ''\\n''\r\n    )\r\nWITH(\r\n    CustomerID INT,\r\n    AddressID INT,\r\n    AddressType NVARCHAR(4000),\r\n    rowguid UNIQUEIDENTIFIER,\r\n    ModifiedDate DATETIME2\r\n) AS A'\r\nEXEC sp_executesql @CustomerAddress_Command\r\n\r\nDECLARE @Product_Command NVARCHAR(MAX)\r\nSET @Product_Command = N'\r\nCREATE OR ALTER VIEW [AdventureWorks].[Product] AS\r\nSELECT * \r\nFROM OPENROWSET(\r\n        BULK ''Product.csv'',\r\n        DATA_SOURCE = ''adventureworks_raw'',\r\n        FORMAT = ''CSV'', \r\n        FIELDTERMINATOR ='','', \r\n        FIRST_ROW = 2,\r\n        ROWTERMINATOR = ''\\n''\r\n    )\r\nWITH(\r\n    ProductID INT,\r\n    Name NVARCHAR(4000),\r\n    ProductNumber NVARCHAR(4000),\r\n    Color NVARCHAR(4000),\r\n    StandardCost MONEY,\r\n    ListPrice MONEY,\r\n    Size NVARCHAR(4000),\r\n    Weight DECIMAL,\r\n    ProductCategoryID INT,\r\n    ProductModelID INT,\r\n    SellStartDate DATETIME2,\r\n    SellEndDate DATETIME2,\r\n    DiscontinuedDate DATETIME2,\r\n    ThumbNailPhoto VARCHAR(MAX),\r\n    ThumbnailPhotoFileName NVARCHAR(4000),\r\n    rowguid UNIQUEIDENTIFIER,\r\n    ModifiedDate DATETIME2\r\n) AS A'\r\nEXEC sp_executesql @Product_Command\r\n\r\nDECLARE @ProductCategory_Command NVARCHAR(MAX)\r\nSET @ProductCategory_Command = N'CREATE OR ALTER VIEW [AdventureWorks].[ProductCategory] AS\r\nSELECT * \r\nFROM OPENROWSET(\r\n        BULK ''ProductCategory.csv'',\r\n        DATA_SOURCE = ''adventureworks_raw'',\r\n        FORMAT = ''CSV'', \r\n        FIELDTERMINATOR ='','', \r\n        FIRST_ROW = 2,\r\n        ROWTERMINATOR = ''\\n''\r\n    )\r\nWITH(\r\n    ProductCategoryID INT,\r\n    ParentProductCategoryID INT,\r\n    Name NVARCHAR(4000),\r\n    rowguid UNIQUEIDENTIFIER,\r\n    ModifiedDate DATETIME2\r\n) AS A'\r\nEXEC sp_executesql @ProductCategory_Command\r\n\r\n\r\nDECLARE @ProductDescription_Command NVARCHAR(MAX)\r\nSET @ProductDescription_Command = N'CREATE OR ALTER VIEW [AdventureWorks].[ProductDescription] AS\r\nSELECT * \r\nFROM OPENROWSET(\r\n        BULK ''ProductDescription.csv'',\r\n        DATA_SOURCE = ''adventureworks_raw'',\r\n        FORMAT = ''CSV'', \r\n        FIELDTERMINATOR ='','', \r\n        FIRST_ROW = 2,\r\n        ROWTERMINATOR = ''\\n''\r\n    )\r\nWITH(\r\n    ProductDescriptionID INT,\r\n    Description NVARCHAR(4000),\r\n    rowguid UNIQUEIDENTIFIER,\r\n    ModifiedDate DATETIME2\r\n) AS A'\r\nEXEC sp_executesql @ProductDescription_Command\r\n\r\nDECLARE @ProductModel_Command NVARCHAR(MAX)\r\nSET @ProductModel_Command = N'\r\nCREATE OR ALTER VIEW [AdventureWorks].[ProductModel] \r\nAS \r\nSELECT * \r\nFROM OPENROWSET(\r\n        BULK ''ProductModel.csv'',\r\n        DATA_SOURCE = ''adventureworks_raw'',\r\n        FORMAT = ''CSV'', \r\n        FIELDTERMINATOR ='','', \r\n        FIRST_ROW = 2,\r\n        ROWTERMINATOR = ''\\n''\r\n    )\r\nWITH(\r\n    ProductModelID INT,\r\n    Name NVARCHAR(4000),\r\n    CatalogDescription XML,\r\n    rowguid UNIQUEIDENTIFIER,\r\n    ModifiedDate DATETIME2\r\n) AS A'\r\nEXEC sp_executesql @ProductModel_Command\r\n\r\nDECLARE @ProductModelProductDescription_Command NVARCHAR(MAX)\r\nSET @ProductModelProductDescription_Command = N'CREATE OR ALTER VIEW [AdventureWorks].[ProductModelProductDescription] \r\nAS \r\nSELECT * \r\nFROM OPENROWSET(\r\n        BULK ''ProductModelProductDescription.csv'',\r\n        DATA_SOURCE = ''adventureworks_raw'',\r\n        FORMAT = ''CSV'', \r\n        FIELDTERMINATOR ='','', \r\n        FIRST_ROW = 2,\r\n        ROWTERMINATOR = ''\\n''\r\n    )\r\nWITH(\r\n    ProductModelID INT,\r\n    ProductDescriptionID INT,\r\n    Culture NCHAR(4000),\r\n    rowguid UNIQUEIDENTIFIER,\r\n    ModifiedDate DATETIME2\r\n    ) AS A'\r\nEXEC sp_executesql @ProductModelProductDescription_Command\r\n\r\nDECLARE @SalesOrderDetail_Command NVARCHAR(MAX)\r\nSET @SalesOrderDetail_Command = N'\r\nCREATE OR ALTER VIEW [AdventureWorks].[SalesOrderDetail] \r\nAS \r\nSELECT * \r\nFROM OPENROWSET(\r\n        BULK ''SalesOrderDetail.csv'',\r\n        DATA_SOURCE = ''adventureworks_raw'',\r\n        FORMAT = ''CSV'', \r\n        FIELDTERMINATOR = '','', \r\n        FIRST_ROW = 2,\r\n        ROWTERMINATOR = ''\\n''\r\n    )\r\nWITH(\r\n    SalesOrderID INT,\r\n    SalesOrderDetailID INT,\r\n    OrderQty SMALLINT,\r\n    ProductID INT,\r\n    UnitPrice MONEY,\r\n    UnitPriceDiscount MONEY,\r\n    LineTotal NUMERIC,\r\n    rowguid UNIQUEIDENTIFIER,\r\n    ModifiedDate DATETIME2\r\n) AS A'\r\nEXEC sp_executesql @SalesOrderDetail_Command\r\n\r\nDECLARE @SalesOrderHeader_Command NVARCHAR(MAX)\r\nSET @SalesOrderHeader_Command = N'CREATE OR ALTER VIEW [AdventureWorks].[SalesOrderHeader] \r\nAS \r\nSELECT * \r\nFROM OPENROWSET(\r\n        BULK ''SalesOrderHeader.csv'',\r\n        DATA_SOURCE = ''adventureworks_raw'',\r\n        FORMAT = ''CSV'', \r\n        FIELDTERMINATOR ='','', \r\n        FIRST_ROW = 2,\r\n        ROWTERMINATOR = ''\\n''\r\n    )\r\nWITH(\r\n    SalesOrderID INT,\r\n    RevisionNumber TINYINT,\r\n    OrderDate DATETIME2,\r\n    DueDate DATETIME2,\r\n    ShipDate DATETIME2,\r\n    Status TINYINT,\r\n    OnlineOrderFlag BIT,\r\n    SalesOrderNumber NVARCHAR(4000),\r\n    PurchaseOrderNumber NVARCHAR(4000),\r\n    AccountNumber NVARCHAR(4000),\r\n    CustomerID INT,\r\n    ShipToAddressID INT,\r\n    BillToAddressID INT,\r\n    ShipMethod NVARCHAR(4000),\r\n    CreditCardApprovalCode VARCHAR(4000),\r\n    SubTotal MONEY,\r\n    TaxAmt MONEY,\r\n    Freight MONEY,\r\n    TotalDue MONEY,\r\n    Comment NVARCHAR(4000),\r\n    rowguid UNIQUEIDENTIFIER,\r\n    ModifiedDate DATETIME2\r\n) AS A'\r\nEXEC sp_executesql @SalesOrderHeader_Command\r\n\r\nDECLARE @vGetAllCategories_Command NVARCHAR(MAX)\r\nSET @vGetAllCategories_Command = N'CREATE OR ALTER VIEW [AdventureWorks].[vGetAllCategories] \r\nAS \r\nSELECT * \r\nFROM OPENROWSET(\r\n        BULK ''vGetAllCategories.csv'',\r\n        DATA_SOURCE = ''adventureworks_raw'',\r\n        FORMAT = ''CSV'', \r\n        FIELDTERMINATOR ='','', \r\n        FIRST_ROW = 2,\r\n        ROWTERMINATOR = ''\\n''\r\n    )\r\nWITH(\r\n    ParentProductCategoryName NVARCHAR(4000),\r\n    ProductCategoryName NVARCHAR(4000),\r\n    ProductCategoryID INT\r\n) AS A'\r\nEXEC sp_executesql @vGetAllCategories_Command\r\n\r\nDECLARE @vProductAndDescription_Command NVARCHAR(MAX)\r\nSET @vProductAndDescription_Command = N'CREATE OR ALTER VIEW [AdventureWorks].[vProductAndDescription] \r\nAS \r\nSELECT * \r\nFROM OPENROWSET(\r\n        BULK ''vProductAndDescription.csv'',\r\n        DATA_SOURCE = ''adventureworks_raw'',\r\n        FORMAT = ''CSV'', \r\n        FIELDTERMINATOR ='','', \r\n        FIRST_ROW = 2,\r\n        ROWTERMINATOR = ''\\n''\r\n    )\r\nWITH(\r\n    ProductID INT,\r\n    Name NVARCHAR(4000),\r\n    ProductModel NVARCHAR(4000),\r\n    Culture NCHAR(4000),\r\n    Description NVARCHAR(4000)\r\n) AS A'\r\nEXEC sp_executesql @vProductAndDescription_Command\r\n\r\nDECLARE @vProductModelCatalogDescription_Command NVARCHAR(MAX)\r\nSET @vProductModelCatalogDescription_Command = N'CREATE OR ALTER VIEW [AdventureWorks].[vProductModelCatalogDescription] \r\nAS \r\nSELECT * \r\nFROM OPENROWSET(\r\n        BULK ''vProductModelCatalogDescription.csv'',\r\n        DATA_SOURCE = ''adventureworks_raw'',\r\n        FORMAT = ''CSV'', \r\n        FIELDTERMINATOR ='','', \r\n        FIRST_ROW = 2,\r\n        ROWTERMINATOR = ''\\n''\r\n    )\r\nWITH(\r\n    ProductModelID INT,\r\n    Name NVARCHAR(4000),\r\n    Summary NVARCHAR(4000),\r\n    Manufacturer NVARCHAR(4000),\r\n    Copyright NVARCHAR(4000),\r\n    ProductURL NVARCHAR(4000),\r\n    WarrantyPeriod NVARCHAR(4000),\r\n    WarrantyDescription NVARCHAR(4000),\r\n    NoOfYears NVARCHAR(4000),\r\n    MaintenanceDescription NVARCHAR(4000),\r\n    Wheel NVARCHAR(4000),\r\n    Saddle NVARCHAR(4000),\r\n    Pedal NVARCHAR(4000),\r\n    BikeFrame NVARCHAR(4000),\r\n    Crankset NVARCHAR(4000),\r\n    PictureAngle NVARCHAR(4000),\r\n    PictureSize NVARCHAR(4000),\r\n    ProductPhotoID NVARCHAR(4000),\r\n    Material NVARCHAR(4000),\r\n    Color NVARCHAR(4000),\r\n    ProductLine NVARCHAR(4000),\r\n    Style NVARCHAR(4000),\r\n    RiderExperience NVARCHAR(4000),\r\n    rowguid UNIQUEIDENTIFIER,\r\n    ModifiedDate DATETIME2\r\n) AS A'\r\nEXEC sp_executesql @vProductModelCatalogDescription_Command"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "act_script_refined_views",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "act_script_raw_views",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_synapse",
							"type": "LinkedServiceReference",
							"parameters": {
								"db_name": "refined"
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "DECLARE @Address_Command NVARCHAR(MAX)\r\nSET @Address_Command = N'CREATE OR ALTER VIEW AdventureWorks.Address AS \r\nSELECT * \r\nFROM\r\nOPENROWSET\r\n(\r\n    BULK ''Address.parquet'',\r\n    FORMAT=''PARQUET'',\r\n    DATA_SOURCE=''adventureworks_refined''\r\n) AS A'\r\nEXEC sp_executesql @Address_Command\r\n\r\nDECLARE @Customer_Command NVARCHAR(MAX)\r\nSET @Customer_Command = N'CREATE OR ALTER VIEW AdventureWorks.Customer \r\nAS \r\nSELECT * \r\nFROM\r\nOPENROWSET(\r\n    BULK ''Customer.parquet'',\r\n    FORMAT=''PARQUET'',\r\n    DATA_SOURCE=''adventureworks_refined''\r\n    ) AS A'\r\nEXEC sp_executesql @Customer_Command\r\n\r\nDECLARE @ProductModel_Command NVARCHAR(MAX)\r\nSET @ProductModel_Command = N'CREATE OR ALTER VIEW AdventureWorks.ProductModel \r\nAS \r\nSELECT * \r\nFROM\r\nOPENROWSET(\r\n    BULK ''ProductModel.parquet'',\r\n    FORMAT=''PARQUET'',\r\n    DATA_SOURCE=''adventureworks_refined''\r\n    ) AS A'\r\nEXEC sp_executesql @ProductModel_Command\r\n\r\nDECLARE @vProductModelCatalogDescription_Command NVARCHAR(MAX)\r\nSET @vProductModelCatalogDescription_Command = N'CREATE OR ALTER VIEW AdventureWorks.vProductModelCatalogDescription \r\nAS \r\nSELECT * \r\nFROM\r\nOPENROWSET(\r\n    BULK ''vProductModelCatalogDescription.parquet'',\r\n    FORMAT=''PARQUET'',\r\n    DATA_SOURCE=''adventureworks_refined''\r\n    ) AS A'\r\nEXEC sp_executesql @vProductModelCatalogDescription_Command\r\n\r\nDECLARE @ProductDescription_Command NVARCHAR(MAX)\r\nSET @ProductDescription_Command = N'CREATE OR ALTER VIEW AdventureWorks.ProductDescription \r\nAS \r\nSELECT * \r\nFROM\r\nOPENROWSET(\r\n    BULK ''ProductDescription.parquet'',\r\n    FORMAT=''PARQUET'',\r\n    DATA_SOURCE=''adventureworks_refined''\r\n    ) AS A'\r\nEXEC sp_executesql @ProductDescription_Command\r\n\r\nDECLARE @Product_Command NVARCHAR(MAX)\r\nSET @Product_Command = N'CREATE OR ALTER VIEW AdventureWorks.Product \r\nAS \r\nSELECT * \r\nFROM\r\nOPENROWSET(\r\n    BULK ''Product.parquet'',\r\n    FORMAT=''PARQUET'',\r\n    DATA_SOURCE=''adventureworks_refined''\r\n    ) AS A'\r\nEXEC sp_executesql @Product_Command\r\n\r\nDECLARE @ProductModelProductDescription_Command NVARCHAR(MAX)\r\nSET @ProductModelProductDescription_Command = N'CREATE OR ALTER VIEW AdventureWorks.ProductModelProductDescription \r\nAS \r\nSELECT * \r\nFROM\r\nOPENROWSET(\r\n    BULK ''ProductModelProductDescription.parquet'',\r\n    FORMAT=''PARQUET'',\r\n    DATA_SOURCE=''adventureworks_refined''\r\n    ) AS A'\r\nEXEC sp_executesql @ProductModelProductDescription_Command\r\n\r\nDECLARE @vProductAndDescription_Command NVARCHAR(MAX)\r\nSET @vProductAndDescription_Command = N'CREATE OR ALTER VIEW AdventureWorks.vProductAndDescription \r\nAS \r\nSELECT * \r\nFROM\r\nOPENROWSET(\r\n    BULK ''vProductAndDescription.parquet'',\r\n    FORMAT=''PARQUET'',\r\n    DATA_SOURCE=''adventureworks_refined''\r\n    ) AS A'\r\nEXEC sp_executesql @vProductAndDescription_Command\r\n\r\nDECLARE @ProductCatery_Command NVARCHAR(MAX)\r\nSET @ProductCatery_Command = N'CREATE OR ALTER VIEW AdventureWorks.ProductCategory \r\nAS \r\nSELECT * \r\nFROM\r\nOPENROWSET(\r\n    BULK ''ProductCategory.parquet'',\r\n    FORMAT=''PARQUET'',\r\n    DATA_SOURCE=''adventureworks_refined''\r\n    ) AS A'\r\nEXEC sp_executesql @ProductCatery_Command\r\n\r\nDECLARE @vGetAllCateries_Command NVARCHAR(MAX)\r\nSET @vGetAllCateries_Command = N'CREATE OR ALTER VIEW AdventureWorks.vGetAllCategories \r\nAS \r\nSELECT * \r\nFROM\r\nOPENROWSET(\r\n    BULK ''vGetAllCategories.parquet'',\r\n    FORMAT=''PARQUET'',\r\n    DATA_SOURCE=''adventureworks_refined''\r\n    ) AS A'\r\nEXEC sp_executesql @vGetAllCateries_Command\r\n\r\nDECLARE @CustomerAddress_Command NVARCHAR(MAX)\r\nSET @CustomerAddress_Command = N'CREATE OR ALTER VIEW AdventureWorks.CustomerAddress \r\nAS \r\nSELECT * \r\nFROM\r\nOPENROWSET(\r\n    BULK ''CustomerAddress.parquet'',\r\n    FORMAT=''PARQUET'',\r\n    DATA_SOURCE=''adventureworks_refined''\r\n    ) AS A'\r\nEXEC sp_executesql @CustomerAddress_Command\r\n\r\nDECLARE @SalesOrderDetail_Command NVARCHAR(MAX)\r\nSET @SalesOrderDetail_Command = N'CREATE OR ALTER VIEW AdventureWorks.SalesOrderDetail \r\nAS \r\nSELECT * \r\nFROM\r\nOPENROWSET(\r\n    BULK ''SalesOrderDetail.parquet'',\r\n    FORMAT=''PARQUET'',\r\n    DATA_SOURCE=''adventureworks_refined''\r\n    ) AS A'\r\nEXEC sp_executesql @SalesOrderDetail_Command\r\n\r\nDECLARE @SalesOrderHeader_Command NVARCHAR(MAX)\r\nSET @SalesOrderHeader_Command = N'CREATE OR ALTER VIEW AdventureWorks.SalesOrderHeader \r\nAS \r\nSELECT * \r\nFROM\r\nOPENROWSET(\r\n    BULK ''SalesOrderHeader.parquet'',\r\n    FORMAT=''PARQUET'',\r\n    DATA_SOURCE=''adventureworks_refined''\r\n    ) AS A'\r\nEXEC sp_executesql @SalesOrderHeader_Command"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"viewname": {
						"type": "array"
					},
					"refined_folder_path": {
						"type": "string"
					}
				},
				"variables": {
					"schema_name": {
						"type": "String",
						"defaultValue": "AdventureWorks"
					},
					"data_source": {
						"type": "String",
						"defaultValue": "AdventureWorks_Refined"
					}
				},
				"folder": {
					"name": "AdventureWorks"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-18T18:15:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_synapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_audit_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_adls",
					"type": "LinkedServiceReference",
					"parameters": {
						"adls_url": {
							"value": "@dataset().adls_connection_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"audit_container": {
						"type": "string"
					},
					"adls_connection_url": {
						"type": "string"
					}
				},
				"folder": {
					"name": "AdventureWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().audit_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azsqldb_trg_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_adls",
					"type": "LinkedServiceReference",
					"parameters": {
						"adls_url": {
							"value": "@dataset().adls_connection_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"folder_name": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					},
					"adls_connection_url": {
						"type": "string"
					}
				},
				"folder": {
					"name": "AdventureWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_get_raw_filenames')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_adls",
					"type": "LinkedServiceReference",
					"parameters": {
						"adls_url": {
							"value": "@dataset().adls_connection_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"raw_container": {
						"type": "string"
					},
					"raw_foldername": {
						"type": "string"
					},
					"adls_connection_url": {
						"type": "string"
					}
				},
				"folder": {
					"name": "AdventureWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().raw_foldername",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().raw_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_get_raw_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_adls",
					"type": "LinkedServiceReference",
					"parameters": {
						"adls_url": {
							"value": "@dataset().adls_connection_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"adls_connection_url": {
						"type": "string"
					},
					"raw_container": {
						"type": "string"
					},
					"raw_folder": {
						"type": "string"
					}
				},
				"folder": {
					"name": "S3_to_Synapse_Migration"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().raw_folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().raw_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_get_raw_meta')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_adls",
					"type": "LinkedServiceReference",
					"parameters": {
						"adls_url": {
							"value": "@dataset().adls_connection_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"folder_name": {
						"type": "string"
					},
					"adls_connection_url": {
						"type": "string"
					}
				},
				"folder": {
					"name": "AdventureWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folder_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_pnc_customer_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_adls",
					"type": "LinkedServiceReference",
					"parameters": {
						"adls_url": {
							"value": "@dataset().adls_connection_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"folder_path": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					},
					"adls_connection_url": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PnC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder_path",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_pnc_other_tables_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_adls",
					"type": "LinkedServiceReference",
					"parameters": {
						"adls_url": {
							"value": "@dataset().adls_connection_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"adls_connection_url": {
						"type": "string"
					},
					"raw_folder": {
						"type": "string"
					},
					"raw_filename": {
						"type": "string"
					},
					"raw_container": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PnC"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().raw_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().raw_folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().raw_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_raw_audit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_adls",
					"type": "LinkedServiceReference",
					"parameters": {
						"adls_url": {
							"value": "@dataset().adls_connection_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"audit_container": {
						"type": "string"
					},
					"audit_folder": {
						"type": "string"
					},
					"audit_filename": {
						"type": "string"
					},
					"adls_connection_url": {
						"type": "string"
					}
				},
				"folder": {
					"name": "AdventureWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().audit_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().audit_folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().audit_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_raw_audit_merge')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_adls",
					"type": "LinkedServiceReference",
					"parameters": {
						"adls_url": {
							"value": "@dataset().adls_connection_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Audit_Container": {
						"type": "string"
					},
					"Audit_Folder": {
						"type": "string"
					},
					"Audit_Filename": {
						"type": "string"
					},
					"adls_connection_url": {
						"type": "string"
					}
				},
				"folder": {
					"name": "AdventureWorks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Audit_Filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Audit_Folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Audit_Container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_raw_audits')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_synapse",
					"type": "LinkedServiceReference",
					"parameters": {
						"db_name": "refined"
					}
				},
				"folder": {
					"name": "S3_to_Synapse_Migration"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_synapse')]"
			]
		}
	]
}